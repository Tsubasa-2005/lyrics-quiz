// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: quizManager.sql

package rdb

import (
	"context"
)

const createQuizManager = `-- name: CreateQuizManager :exec
INSERT INTO quiz_manager (user_id, the_number_of_questions, quiz_count, lyrics_count, status, type) VALUES (?1, ?2, ?3, ?4, ?5, ?6)
`

type CreateQuizManagerParams struct {
	UserID               string
	TheNumberOfQuestions int64
	QuizCount            int64
	LyricsCount          int64
	Status               string
	Type                 string
}

func (q *Queries) CreateQuizManager(ctx context.Context, arg CreateQuizManagerParams) error {
	_, err := q.db.ExecContext(ctx, createQuizManager,
		arg.UserID,
		arg.TheNumberOfQuestions,
		arg.QuizCount,
		arg.LyricsCount,
		arg.Status,
		arg.Type,
	)
	return err
}

const getQuizManager = `-- name: GetQuizManager :one
SELECT id, user_id, the_number_of_questions, quiz_count, lyrics_count, status, type FROM quiz_manager WHERE user_id = ?1
`

func (q *Queries) GetQuizManager(ctx context.Context, userID string) (QuizManager, error) {
	row := q.db.QueryRowContext(ctx, getQuizManager, userID)
	var i QuizManager
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.TheNumberOfQuestions,
		&i.QuizCount,
		&i.LyricsCount,
		&i.Status,
		&i.Type,
	)
	return i, err
}

const updateQuizManager = `-- name: UpdateQuizManager :exec
UPDATE quiz_manager SET the_number_of_questions = ?1, quiz_count = ?2, lyrics_count = ?3, status = ?4, type = ?5 WHERE user_id = ?6
`

type UpdateQuizManagerParams struct {
	TheNumberOfQuestions int64
	QuizCount            int64
	LyricsCount          int64
	Status               string
	Type                 string
	UserID               string
}

func (q *Queries) UpdateQuizManager(ctx context.Context, arg UpdateQuizManagerParams) error {
	_, err := q.db.ExecContext(ctx, updateQuizManager,
		arg.TheNumberOfQuestions,
		arg.QuizCount,
		arg.LyricsCount,
		arg.Status,
		arg.Type,
		arg.UserID,
	)
	return err
}
